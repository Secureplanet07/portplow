# -*- coding: utf-8 -*-
# Generated by Django 1.9.3 on 2016-04-21 17:20
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import scanner.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.FileField(upload_to=scanner.models.attachment_path)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('P', 'Pending'), ('E', 'Executing'), ('R', 'Needs retry'), ('K', 'Killed'), ('C', 'Complete'), ('H', 'H')], default='P', editable=False, max_length=1)),
                ('attempts', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('command', models.TextField()),
                ('target_hosts', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='JobLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('record_date', models.DateTimeField(auto_now_add=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('attempt', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('return_code', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('stdout', models.TextField(blank=True, default='', null=True)),
                ('stderr', models.TextField(blank=True, default='', null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='raw_results', to='scanner.Job')),
            ],
        ),
        migrations.CreateModel(
            name='LogUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50)),
                ('ip', models.CharField(max_length=64)),
                ('dt', models.DateTimeField(default=datetime.datetime.utcnow, verbose_name='Date/Time')),
                ('action', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150, unique=True)),
                ('command', models.TextField(default='', help_text='Please use <ips> for target ranges.', verbose_name='Command Line')),
                ('tool', models.CharField(choices=[('/usr/bin/nmap', 'nmap'), ('/opt/portplow/masscan/bin/masscan', 'masscan')], max_length=50)),
                ('description', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Scan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=150)),
                ('hosts', models.TextField(help_text='One range/IP per line')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('S', 'Setting up'), ('R', 'Running'), ('C', 'Complete'), ('H', 'On Hold')], default='P', max_length=1)),
                ('chunk_size', models.PositiveIntegerField(default=8, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(256)])),
                ('scanner_count', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('deconfliction_message', models.TextField(blank=True, null=True)),
                ('htaccess', models.TextField(blank=True, null=True, verbose_name='Scanner Passwords')),
                ('scan_hours', models.TextField(blank=True, null=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('stop_date', models.DateTimeField(null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scans', to='auth.Group')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scans', to='scanner.Profile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Scanner',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('notes', models.TextField(null=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('D', 'Decommissioned'), ('E', 'Error')], default='A', max_length=1)),
                ('ip', models.GenericIPAddressField(null=True)),
                ('key', models.TextField(editable=False, null=True)),
                ('external_id', models.CharField(max_length=40, null=True)),
                ('token', models.CharField(default=scanner.models.generate_random_password, max_length=50)),
                ('scan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='scanners', to='scanner.Scan')),
            ],
        ),
        migrations.CreateModel(
            name='ScannerLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ip', models.GenericIPAddressField(null=True)),
                ('dt', models.DateTimeField(default=datetime.datetime.utcnow, editable=False)),
                ('log_type', models.CharField(choices=[('C', 'Checkin'), ('A', 'Assigned job'), ('E', 'Error'), ('D', 'Data Received')], max_length=1)),
                ('content', models.TextField()),
                ('scanner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='scanner.Scanner')),
            ],
        ),
        migrations.CreateModel(
            name='ScanResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ip', models.CharField(max_length=15)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('hostname', models.CharField(max_length=150)),
                ('port', models.SmallIntegerField(blank=True, null=True)),
                ('protocol', models.CharField(blank=True, max_length=10, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('service', models.CharField(blank=True, max_length=40, null=True)),
                ('reason', models.CharField(blank=True, max_length=20, null=True)),
                ('joblog', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='parsed_results', to='scanner.JobLog')),
                ('scan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='parsed_results', to='scanner.Scan')),
            ],
        ),
        migrations.AddField(
            model_name='joblog',
            name='scanner',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, to='scanner.Scanner'),
        ),
        migrations.AddField(
            model_name='job',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='jobs', to='scanner.Profile'),
        ),
        migrations.AddField(
            model_name='job',
            name='scan',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='scanner.Scan'),
        ),
        migrations.AddField(
            model_name='job',
            name='scanner_lock',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='executing_jobs', to='scanner.Scanner'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='attachments', to='scanner.Job'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='scan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='scanner.Scan'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='scanner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='attachments', to='scanner.Scanner'),
        ),
    ]
